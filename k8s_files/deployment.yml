
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: weather-app
  name: weatherapp
spec:
  replicas: 4
  selector:
    matchLabels:
      app: weather-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: weather-app
    spec:
      containers:
        - name: weatherapp
          image: 'evgenyniko/helm_weather_app:1'
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: weather-app
  name: weatherapp-service
spec:
  ports:
    - name: http
      port: 32300
      protocol: TCP
      targetPort: 8000
  selector:
    app: weather-app
  type: ClusterIP
  template:
    spec:
      containers: []
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: weather-app
  name: weatherapp-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: a995c9f99c2b84bbd8ce783463d779a7-98dfc83f139bbcdd.elb.eu-north-1.amazonaws.com
      http:
        paths:
          - backend:
              service:
                name: weatherapp-service
                port:
                  number: 32300
            path: /
            pathType: Prefix
  template:
    spec:
      containers: []
